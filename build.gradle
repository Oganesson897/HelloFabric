plugins {
    id 'java'
}

group = 'org.aequoreus.hellofabric'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        url "https://maven.fabricmc.net/"
    }
    maven {
        url "https://repo.spongepowered.org/maven/"
    }
    flatDir {
        dirs 'artifact'
    }
}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'

    implementation "artifact:HMCL:3.6.17"

    implementation "net.fabricmc:fabric-loader:0.17.2"
    implementation "net.fabricmc:access-widener:2.1.0"
    implementation "net.fabricmc:tiny-remapper:0.9.0"
    implementation "net.fabricmc:tiny-mappings-parser:0.3.0+build.17"
    implementation("net.fabricmc:sponge-mixin:0.16.4+mixin.0.8.7") {
        exclude(group: 'com.google.code.gson')
        exclude(group: 'com.google.guava')
    }
    implementation "com.google.guava:guava:33.0.0-jre"
    implementation 'com.google.code.gson:gson:2.8.9'
    implementation "org.ow2.asm:asm:9.8"
    implementation "org.ow2.asm:asm-analysis:9.8"
    implementation "org.ow2.asm:asm-commons:9.8"
    implementation "org.ow2.asm:asm-tree:9.8"
    implementation "org.ow2.asm:asm-util:9.8"

    implementation "org.jetbrains:annotations:23.0.0"
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

tasks.register('runModded', JavaExec) {
    dependsOn jar

    group = 'run'
    description = 'Runs HMCL though Fabric Loader'
    classpath = files(jar.archiveFile, sourceSets.main.runtimeClasspath) - sourceSets.main.output
    mainClass = 'org.aequoreus.hellofabric.Main'
    workingDir = rootProject.projectDir.toPath().resolve('run').toFile()
    jvmArgs += [
            '-Dfabric.development=true'
    ]

    workingDir = 'run'
}

test {
    useJUnitPlatform()
}